@import '../mixins/height';
@import '../mixins/fonts';

// Using custom breakpoints here since the styling
// for this page is a bit more specific
// prettier-ignore
@mixin breakpoint($size) {
  @if $size == sm {
    @media (min-width: 600px) {
      @content;
    }
  }

  @else if $size == md {
    @media (min-width: 850px) {
      @content;
    }
  }

  @else if $size == lg {
    @media (min-width: 1300px) {
      @content;
    }
  }
}

.project {
  display: flex;
  width: 100%;
  overflow: hidden;
  flex-direction: column-reverse;
  padding: 0 10%;

  @include font('Avenir');
  @include full-height;

  @include breakpoint(sm) {
    padding: 0;
    flex-direction: row;
  }
}

.project__title {
  color: var(--heading-color);
  line-height: 52px;
  margin-bottom: 32px;
  max-width: 300px;

  @include font('AvenirNext-Bold');

  @include breakpoint(lg) {
    max-width: 100%;
  }

  h1 {
    font-size: 35px;
    margin: 0;

    @include breakpoint(md) {
      font-size: 45px;
    }
  }
}

.project__description {
  margin-bottom: 32px;
  max-width: 200px;
  color: var(--text-color);

  @include breakpoint(md) {
    max-width: 300px;
  }

  & p {
    margin: 0;
    line-height: 1.8;
  }
}

.project__info {
  display: flex;
  width: 100%;
  height: 100%;
  flex-direction: column;
  margin-left: 0;
  justify-content: center;

  @include breakpoint(sm) {
    margin-left: 75px;
  }

  @include breakpoint(md) {
    margin-left: 100px;
  }
}

.project__link {
  $transition: transform 0.25s ease-in-out;

  a {
    color: var(--heading-color);
    font-weight: bold;
    text-decoration: none;
    font-size: 14px;
    position: relative;
    display: inline-block;
    transition: $transition;

    &::before {
      content: '';
      width: 20px;
      height: 1px;
      background-color: #000;
      vertical-align: middle;
      display: inline-block;
      margin-right: 16px;
      transition: $transition;
      transform-origin: right;
    }

    @include breakpoint(lg) {
      &:hover {
        transform: translateX(20%) skew(-15deg);
        &::before {
          transform: scaleX(5);
        }
      }
    }
  }
}

.project__image {
  width: 43%;
  height: 100%;
}

.project__image--background {
  width: 100%;
  height: 100%;
  position: relative;
  display: none;
  z-index: -1;

  @include breakpoint(sm) {
    display: flex;
  }

  img {
    width: auto;
    filter: brightness(90%);
    user-select: none;

    @include full-height;
  }

  &::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.6);
    z-index: 1;
  }
}

.project__image--foreground {
  display: flex;
  position: absolute;
  right: 0;
  width: 100%;
  top: 5%;
  height: 50%;

  @include breakpoint(sm) {
    width: 50%;
    top: 0;
    height: 100%;
  }

  @include breakpoint(md) {
    width: 54%;
  }

  img {
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 1;
    object-fit: contain;
    user-select: none;
  }
}

.carousel {
  position: fixed;
  display: flex;
  align-items: center;
  height: 100%;
  margin-right: 5px;
  top: 20%;
  right: 10px;

  @include breakpoint(sm) {
    top: 0;
    left: 0;
    right: auto;
  }

  @include font('Avenir');

  ul {
    padding: 0;
    list-style: none;
  }
}

.carousel__item {
  $transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
  line-height: 3;
  font-size: 12px;
  text-align: left;
  cursor: pointer;
  user-select: none;

  @include breakpoint(md) {
    padding-right: 5em;
  }

  span {
    opacity: 0;
    display: inline-block;
    transition: $transition;
  }

  &::after {
    content: '';
    width: 13px;
    background-color: var(--heading-color);
    height: 1px;
    transform-origin: right;
    display: inline-block;
    vertical-align: middle;
    transition: $transition;
  }

  &:hover {
    span {
      opacity: 1;
      transform: translateX(13px);
    }

    &::after {
      opacity: 0;
      transform: translateX(13px);
    }
  }
}

.carousel__item--active {
  span {
    opacity: 1;
    transform: translateX(13px);
  }

  &::after {
    opacity: 0;
    transform: translateX(13px);
  }
}
